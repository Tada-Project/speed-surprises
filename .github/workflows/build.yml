# Basic workflow
name: build

# Controls when the action will run
# Workflow begins with push or PR events
# Focuses on the master branch only
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Create one single job
# This job performs all necessary checks
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      # Turning fail-fast off ensures the entire strategy matrix is allowed to
      # run to completion, allowing detection of individual platform issues
      # regardless of the status of the other platforms.
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8, 3.9]
    env:
      # These environment variables are passed to CodeCov to identify each build
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    # Define the workflow steps
    steps:
        # Checkout the code of the repository
        - name: Check out Repository Code
          uses: actions/checkout@v2
          with:
            fetch-depth: 0
        # Run the mdl linting tool
        # Refers to .mdlrc file in repository
        - name: Run Markdown Linting
          if: runner.os=='Linux'
          uses: actionshub/markdownlint@main
        # Setup Python for the current language version
        - name: Setup Python ${{ matrix.python-version }}
          uses: actions/setup-python@v1
          with:
            python-version: ${{ matrix.python-version }}
        # Install poetry
        - name: Install Poetry
          uses: abatilo/actions-poetry@v2.0.0
          with:
            poetry-version: 1.1.0
        # Install the app and dev dependencies
        - name: Install all of the dependencies
          run: |
            poetry install
        # Run the pytest test suite and collect coverage
        - name: Run Pytest Test Suite with Coverage Monitoring
          run: |
            poetry run task coverage
        # Run the black code formatter in checking mode
        - name: Run Black Code Formatter
          run: |
            poetry run task black
        # Run the flake8 linting tool
        - name: Run Flake8 Linting Tool
          run: |
            poetry run task flake8
        # Run the pydocstyle linting tool
        - name: Run Pydocstyle Linting Tool
          run: |
            poetry run task pydocstyle
        # Run the pylint linting tool
        - name: Run Pylint Linting Tool
          run: |
            poetry run task pylint
        - name: Upload coverage
          uses: codecov/codecov-action@v1
          with:
            files: ./coverage.xml
            flags: unittests
            env_vars: OS,PYTHON
            fail_ci_if_error: true
